@import "syntax-variables";

atom-text-editor {
  background-color: @syntax-gutter-background-color;
  color: @syntax-text-color;

  .bracket-matcher .region {
    background-color: fade(lighten(@magenta, 13%, relative), 13%);
    border-bottom: 2px solid fade(@magenta, 33%);
    box-sizing: content-box;
  }

  .current-result .region {
    background-color: transparent;
    border: 1px dotted @orange;
  }

  .cursors {
    position: fixed;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .find-result .region {
    background-color: @syntax-selection-color;
    border: 1px dotted @orange;
    opacity: 0.40;
    z-index: 1;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;
    margin-top: 1ch;

    .line-number,
    .git-diff-icon .line-number {
      width: auto;

      &.split-diff-added {
        background-color: fade(@syntax-color-added, 7%);
        color: @syntax-gutter-text-color-selected;

        &:after {
          content: "";
          position: absolute;
        }
      }

      &.split-diff-removed {
        background-color: fade(@syntax-color-removed, 7%);
        color: @syntax-gutter-text-color-selected;

        &:after {
          content: "";
          position: absolute;
        }
      }

      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;

        &:after {
          content: "";
          position: absolute;
        }
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }

    &[gutter-name="linter"] {
      order: -1;

      & > .custom-decorations {
        background-color: transparent !important;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @red;
  }

  .highlight {
    &.split-diff-word-added {
      .region {
        background-color: fade(@syntax-color-added, 13%);
      }
    }

    &.split-diff-word-removed {
      .region {
        background-color: fade(@syntax-color-removed, 13%);
      }
    }
  }

  .highlights {
    mix-blend-mode: multiply;
    pointer-events: none;
    z-index: 1;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible,
  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .line {
    &.cursor-line {
      background-color: @syntax-gutter-background-color-selected;
      position: relative;

      &:after {
        background-color: @syntax-gutter-background-color-selected;
        bottom: 0;
        content: "";
        left: -2ch;
        mix-blend-mode: darken;
        position: absolute;
        right: 0;
        top: 0;
      }
    }

    &.split-diff-added {
      background-color: transparent;
      position: relative;

      &:after {
        background-color: fade(@syntax-color-added, 7%);
        bottom: 0;
        content: "";
        left: -1em;
        mix-blend-mode: darken;
        position: absolute;
        right: 0;
        top: 0;
      }
    }

    &.split-diff-removed {
      background-color: transparent;
      position: relative;

      &:after {
        background-color: fade(@syntax-color-removed, 7%);
        bottom: 0;
        content: "";
        left: -1em;
        mix-blend-mode: darken;
        position: absolute;
        right: 0;
        top: 0;
      }
    }

    & .fold-marker:after {
      background-color: fade(@red, 60%);
      border-radius: 0.166666667em;
      color: #fff;
      content: '•••';
      display: inline-block;
      font-size: 1em;
      height: 0.916666667em;
      margin-left: 0.5em;
      padding-left: 0.166666667em;
      padding-right: 0.166666667em;
      position: relative;
      width: auto;
    }
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }

  .spell-check-misspelling .region {
    z-index: 4;
  }

  .split-diff-offset {
    background-color:  @syntax-gutter-background-color;
    position: relative;

    &:after {
      background-color:  @syntax-gutter-background-color;
      bottom: 0;
      content: "";
      left: -1em;
      mix-blend-mode: darken;
      position: absolute;
      right: 0;
      top: 0;
    }
  }

  .syntax--diff {
    & .syntax--diff.syntax--meta.syntax--header.syntax--from-file,
    & .syntax--diff.syntax--meta.syntax--header.syntax--to-file {
      border-bottom: 0;
      color: @syntax-text-color;
    }

    & .syntax--info {
      color: @cyan;
    }

    & .syntax--diff.syntax--markup.syntax--added,
    & .syntax--diff.syntax--markup.syntax--removed {
      border-bottom: 0;
    }

    &.syntax--source {
      color: fade(#000, 54%);
    }

    .syntax--unimportant:first-child + .syntax--markup.syntax--added {
      color: @syntax-color-added;

      & > .syntax--source {
        background-color: @syntax-color-insertion;
      }
    }

    .syntax--unimportant:first-child + .syntax--markup.syntax--removed {
      color: @syntax-color-removed;

      & > .syntax--source {
        background-color: @syntax-color-deletion;
      }
    }
  }

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
    margin-left: 1ch;
    mix-blend-mode: darken;
  }
}

atom-text-editor:not(.mini) {
  .gutter {
    margin-right: 0;
  }

  .scroll-view {
    background-color: @syntax-background-color !important; // Override style attribute.
    padding-top: 1ch;

    .lines {
      padding-left: 1ch;
    }
  }
}

.syntax--comment {
  color: darken(@syntax-background-color, 27%);
}

.syntax--constant {
  color: @cyan;

  &.syntax--character.syntax--character-class.syntax--regexp {
    color: @green;
  }

  &.syntax--character.syntax--escape {
    color: fade(@green, 60%);
  }

  &.syntax--numeric {
    color: @cyan;
  }

  &.syntax--other.syntax--color {
    color: @cyan;
  }

  &.syntax--other.syntax--symbol {
    color: @cyan;
  }
}

.syntax--ts,
.syntax--tsx {
  &.syntax--meta.syntax--separator {
    background-color: inherit;
    color: @red;
  }

  &.syntax--keyword.syntax--control.syntax--default {
    color: @blue;
  }

  &.syntax--meta.syntax--class {
    color: @syntax-text-color;
  }

  &.syntax--name.syntax--function {
    color: @orange !important;
  }
}

.syntax--entity {
  &.syntax--css {
    color: @red;
  }

  &.syntax--gfm {
    color: @purple;
  }

  &.syntax--name.syntax--class,
  &.syntax--name.syntax--type.syntax--class {
    color: @orange;
  }

  &.syntax--name.syntax--function {
    color: @orange;
  }

  &.syntax--name.syntax--type {
    color: @orange;

    &.syntax--name.syntax--type.syntax--object {
      color: @purple;
    }
  }

  &.syntax--name.syntax--section {
    color: @blue;
  }

  &.syntax--name.syntax--tag {
    color: @orange;

    &.syntax--html {
      color: @red;
    }
  }

  &.syntax--other.syntax--attribute-name {
    color: @orange;
  }

  &.syntax--other.syntax--inherited-class {
    color: @orange;
  }
}

.syntax--invalid.syntax--illegal {
  color: #c00;
  text-decoration: line-through;
}

.syntax--json.syntax--source {
  color: darken(@syntax-background-color, 47%);
}

.syntax--keyword {
  color: @red;

  &.syntax--control {
    color: @red;

    .syntax--css &.syntax--html {
      color: @orange;
    }
  }

  &.syntax--operator {
    color: @red;
  }

  &.syntax--other.syntax--special-method {
    color: @orange;
  }

  &.syntax--other.syntax--unit {
    color: @blue;
  }
}

.markdown-preview {
  atom-text-editor {
    .scroll-view {
      padding: 0;
    }
  }
}

.syntax--markup {
  &.syntax--bold {
    color: #000;
    font-weight: bold;
  }

  &.syntax--changed {
    color: @purple;
  }

  &.syntax--deleted {
    color: @red;
  }

  &.syntax--heading,
  &.syntax--heading .syntax--punctuation.syntax--definition.syntax--heading {
    color: @blue;
    font-weight: bold;
  }

  &.syntax--inserted {
    color: @green;
  }

  &.syntax--italic {
    color: #000;
    font-style: italic;
  }

  &.syntax--link {
    color: @cyan;

    & .syntax--punctuation.syntax--definition.syntax--begin,
    & .syntax--punctuation.syntax--definition.syntax--end {
      color: @syntax-text-color;
    }
  }

  &.syntax--list {
    color: @red;
  }

  &.syntax--quote {
    color: @orange;
  }

  &.syntax--raw,
  &.syntax--raw.syntax--inline {
    color: @green;
  }

  &.syntax--strike {
    color: darken(@syntax-background-color, 27%);
    text-decoration: line-through;
  }
}

.syntax--meta {
  &.syntax--class {
    color: @magenta;
  }

  &.syntax--link {
    color: @cyan;
  }

  &.syntax--require {
    color: @blue;
  }

  &.syntax--selector {
    color: @purple;
  }

  &.syntax--separator {
    background-color: @magenta;
    color: @syntax-text-color;
  }

  &.syntax--tag {
    color: darken(@syntax-background-color, 47%);
  }
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--punctuation {
  &.syntax--definition {
    &.syntax--array
    &.syntax--parameters,
    &.syntax--variable {
      color: @syntax-text-color;
    }

    &.syntax--bold {
      color: @magenta;
      font-weight: bold;
    }

    &.syntax--comment {
      color: darken(@syntax-background-color, 27%);
    }

    &.syntax--heading,
    &.syntax--identity {
      color: @blue;
    }

    &.syntax--italic {
      color: @purple;
      font-style: italic;
    }

    &.syntax--string {
      color: darken(@green, 13%);

      .syntax--string.syntax--html & {
        color: darken(@blue, 13%);
      }

      &.syntax--json {
        color: darken(@red, 13%);

        .syntax--structure.syntax--array > .syntax--string.syntax--json > &,
        .syntax--structure.syntax--dictionary.syntax--value > .syntax--string.syntax--json > & {
          color: darken(@blue, 13%);
        }
      }
    }
  }

  &.syntax--section.syntax--embedded {
    color: darken(@red, 10%);
  }

  &.syntax--tag {
    color: darken(@syntax-background-color, 47%);
  }
}

.syntax--storage {
  color: @red;
}

.syntax--string {
  color: @green;

  &.syntax--html {
    color: @blue;
  }


  &.syntax--json {
    color: @red;

    .syntax--structure.syntax--array > &,
    .syntax--structure.syntax--dictionary.syntax--value > & {
      color: @blue;
    }
  }

  &.syntax--other.syntax--link {
    color: @cyan;
  }

  &.syntax--regexp {
    color: @blue;

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @orange;
    }
  }
}

.syntax--support {
  &.syntax--class {
    color: @blue;
  }

  &.syntax--function {
    color: @orange;
  }

  &.syntax--css {
    &.syntax--constant {
      color: @syntax-text-color;
    }

    &.syntax--property-name {
      color: @red;
    }
  }
}

.syntax--variable {
  color: @blue;

  &.syntax--other.syntax--less {
    color: @purple;
  }
}
